openapi: 3.0.0
info:
  title: User Licenses API
  description: API for managing users and licenses
  version: 1.0.0

servers:
  - url: https://licensure.tech/api

security:
  - bearerAuth: []

paths:
  /test:
    get:
      summary: Test method
      responses:
        '200':
          description: Successful response
          content:
            application/json:    
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: OK
                    
  /createUser:
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                wallet_address:
                  type: string
              required:
                - wallet_address
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: integer
                  wallet_address:
                    type: string 
                  nickname:
                    type: string
        '400':
          description: Invalid request data
        '500':
          description: Internal server error
          
  /getUser:
    get:
      summary: Get user data
      parameters:
        - in: query
          name: user_id
          schema:
            type: string
        - in: query 
          name: wallet_address
          schema:
            type: string
        - in: query
          name: nickname 
          schema:
            type: string
      responses:
        '200':
          description: Successful response with user data
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: integer
                  wallet_address:
                    type: string
                  created_at: 
                    type: string
                  nickname:
                    type: string
        '400':
          description: Invalid request parameters
        '404':
          description: User not found
        '500':
          description: Internal server error
          
  /addLicense:
    post:
      summary: Add a license to a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                license_id:
                  type: string
                user_id:
                  type: string
                wallet_address:
                  type: string
                nickname:
                  type: string
              required:
                - license_id
      responses:
        '201':
          description: License added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: License added successfully
        '400':
          description: Invalid request data
        '404':
          description: User not found
        '409':
          description: License already exists
        '500':
          description: Internal server error
          
  /getUserByLicense:
    get:
      summary: Get user data by license ID
      parameters:
        - in: query
          name: license_id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response with user data
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: integer
                  wallet_address:
                    type: string
                  created_at: 
                    type: string
                  nickname:
                    type: string
        '400':
          description: Invalid request parameters
        '404':
          description: User not found
        '500':
          description: Internal server error
          
  /getLicensesByUser:
    get:
      summary: Get user licenses
      parameters:
        - in: query
          name: user_id
          schema:
            type: string
        - in: query 
          name: wallet_address
          schema:
            type: string
        - in: query
          name: nickname 
          schema:
            type: string
      responses:
        '200':
          description: Successful response with a list of licenses
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    license_id:
                      type: string
        '400':
          description: Invalid request parameters
        '404':
          description: Licenses not found for the user
        '500':
          description: Internal server error
          
  /deleteLicense:
    delete:
      summary: Delete a license
      parameters:
        - in: query
          name: license_id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: License deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: License deleted successfully
        '400':
          description: Invalid request parameters
        '404':
          description: License not found
        '500':
          description: Internal server error
          
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT